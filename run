#!/usr/bin/env python
from distutils.core import run_setup
from os import environ
from os.path import abspath, dirname, exists, join
import sys


def activate():
    # Activate the virtual environment if it is present.
    activate = abspath(join(dirname(__file__), 'bin', 'activate_this.py'))
    if exists(activate):
        with open(activate) as f:
            code = compile(f.read(), activate, 'exec')
            exec(code, {}, dict(__file__=activate))

def initpydevd():
    import sys
    pydevpath="/Applications/eclipse-minmal/plugins/org.python.pydev_2.7.0.2013032300/pysrc"
    if pydevpath not in sys.path:
        sys.path.append(pydevpath)
        try:
            import pydevd ;pydevd.settrace()
            print "**********************SUCCESS**************************"
        except:
            print "cannot import pydevd from",pydevpath


if __name__ == '__main__':
    initpydevd()
    if 'VIRTUAL_ENV' not in environ:
        activate()
    # If the distribution has not been set up for development, do so.
    if not environ.get('PYTHONSETUP'):
        # Use an environment variable to signal not to do this on reload
        environ['PYTHONSETUP'] = 'True'
        try:
            start_args = list(sys.argv)
            run_setup('setup.py', ['develop'])
        finally:
            sys.argv = start_args

    # Start the application
    from h.script import start
    start(sys.argv[1:])
